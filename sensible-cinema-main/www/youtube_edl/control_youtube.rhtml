
<!--

Run this from a web server to actually work...

--> 
 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml"> 
  <head> 
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/> 
    <title>YouTube Edit Decision Listed</title> 
    <style type="text/css"> 
      #videoDiv { 
        margin-right: 3px;
      }
      #videoInfo {
        margin-left: 3px;
      }
    </style> 
    <script src="http://www.google.com/jsapi" type="text/javascript"></script> 
    <script type="text/javascript"> 
      google.load("swfobject", "2.1");
    </script>    
    <script type="text/javascript"> 
      /*
       * Polling the player for information
       */
      
      // Update a particular HTML element with a new value
      function updateHTML(elmId, value) {
        document.getElementById(elmId).innerHTML = value;
      }
      
      // This function is called when an error is thrown by the player
      function onPlayerError(errorCode) {
        alert("An error occured of type:" + errorCode);
      }
      
      // This function is called when the player changes state
      function onPlayerStateChange(newState) {
        updateHTML("playerState", newState);
        <% if should_loop == '1' %>
        if(newState == 0) {
          document.location.reload(true);
        } 
        <% end %>
      }      
      

// we will mute from 2->10 seconds, and then skip from second 13 to 18...
// have to run this from a web server for it to work

    function muteFromSecondTwoToTen() { // also contains a skip from 13 to 18...
            ytplayer.mute();
            setTimeout(
              function() {
                ytplayer.unMute();
                setTimeout(
                 function() { 
                   // here we're at second 13
                   // so let's seek to...say...1
                   ytplayer.seekTo(18, true);
                }, 3000);
              },  8000);
    }
      
      var mutes2=[<%= mutes.join(',') %>];
      var splits=[<%= splits.join(',') %>];
      
      function areWeWithin(thisArray) {
          var cur_time = ytplayer.getCurrentTime();
          for (key in thisArray) {
            var item = thisArray[key];
            var start_time = item[0];
            var end_time = item[1];
            if(cur_time > start_time && cur_time < end_time) {
              return end_time;
            }
          }
          return false;
      }
      // Display information about the current state of the player
      // I think this gets called...somewhat frequently, by the youtube player
      function updatePlayerInfo() {
        if(ytplayer && ytplayer.getDuration) {
          updateHTML("videoDuration", ytplayer.getDuration());
          updateHTML("videoCurrentTime", ytplayer.getCurrentTime()); // this is it...
          if(areWeWithin(mutes2))
            ytplayer.mute();
          else
            ytplayer.unMute();
          if(last_end = areWeWithin(splits)) {
            ytplayer.seekTo(last_end, true);
          }
          
        }
        updateHTML("bytesTotal", ytplayer.getVideoBytesTotal());
        updateHTML("startBytes", ytplayer.getVideoStartBytes());
        updateHTML("bytesLoaded", ytplayer.getVideoBytesLoaded());
      }
      
      // This function is automatically called by the player once it loads
      function onYouTubePlayerReady(playerId) {
        ytplayer = document.getElementById("ytPlayer");
        // This causes the updatePlayerInfo function to be called every 250ms to
        // get fresh data from the player
        setInterval(updatePlayerInfo, 25); // 25 ms
        updatePlayerInfo();
        ytplayer.addEventListener("onStateChange", "onPlayerStateChange");
        ytplayer.addEventListener("onError", "onPlayerError");
      }
      
      // The "main method" of this sample. Called when someone clicks "Run".
      function loadPlayer() {
        // The video to load
        var videoID = "<%= video_id %>"
        // Lets Flash from another domain call JavaScript
        var params = { allowScriptAccess: "always" };
        // The element id of the Flash embed
        var atts = { id: "ytPlayer" };
        // All of the magic handled by SWFObject (http://code.google.com/p/swfobject/)
        swfobject.embedSWF("http://www.youtube.com/v/" + videoID + 
                           "&enablejsapi=1&playerapiid=player1&autoplay=1", 
                           "videoDiv", "480", "295", "8", null, null, params, atts);
      }
      function _run() {
        loadPlayer();
      }
      google.setOnLoadCallback(_run);
    </script> 
  </head> 
  <body style="font-family: Arial;border: 0 none;"> 
    <table> 
    <tr> 
    <td><div id="videoDiv">Loading...</div></td> 
    <td valign="top"> 
      <div id="videoInfo"> 
        <p>Player state: <span id="playerState">--</span></p> 
        <p>Current Time: <span id="videoCurrentTime">--:--</span> | Duration: <span id="videoDuration">--:--</span></p> 
        <p>Bytes Total: <span id="bytesTotal">--</span> | Start Bytes: <span id="startBytes">--</span> | Bytes Loaded: <span id="bytesLoaded">--</span></p> 
      </div> 
    </td></tr> 
    </table> 
  </body> 
</html> 
